import { useState } from "react";
import Header from "./components/Header";
import "./styles.css";

export default function App() {
  const [userInput, setUserInput] = useState("");
  const [trackingReports, setTrackingReports] = useState([]);

  const infractionMessage = "ğŸš¨ğŸš¨ğŸš¨ IÌ‡HLAL TESPIÌ‡T EDIÌ‡LDIÌ‡! ğŸš¨ğŸš¨ğŸš¨";

  if (trackingReports.length > 0) {
    console.log(trackingReports);
    if (trackingReports[trackingReports.length - 1].infractionDetected) {
      console.log(infractionMessage);
    }
  }

  function getTimeStamp() {
    const timeStamp = new Date();
    return (
      timeStamp.toLocaleTimeString([], {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        hour12: false,
      }) +
      "." +
      (timeStamp.getMilliseconds() / 1000).toFixed(3).slice(-3)
    );
  }

  function handleInputChange(e) {
    let input = e.target.value;
    const containsInfraction = input.includes("Evil Corp.");

    if (containsInfraction) {
      input = input.replace("Evil Corp.", "Good Corp.");
    }

    setUserInput(input);

    const newReport = {
      timeStamp: getTimeStamp(),
      employeeInput: input,
      infractionDetected: containsInfraction,
    };

    setTrackingReports((prevReports) => [...prevReports, newReport]);

    if (containsInfraction) {
      console.log(infractionMessage);
    }

    console.log(trackingReports);
  }

  /* Challenge 

Bu ÅŸirket Ã§alÄ±ÅŸanlarÄ±nÄ± gÃ¶zetlemek istiyor. GÃ¶reviniz aÅŸaÄŸÄ±dakileri yapmalarÄ±na yardÄ±mcÄ± olmak:

    1. KullanÄ±cÄ± textarea'ya her yazÄ± yazdÄ±ÄŸÄ±nda, userInput ve trackingReports state'lerinin her ikisi de gÃ¼ncellenmelidir. 
       
            a. userInput'un deÄŸeri, kullanÄ±cÄ±nÄ±n textarea'ya yazdÄ±ÄŸÄ± her ÅŸeye eÅŸit bir string olmalÄ±dÄ±r (aÅŸaÄŸÄ±daki gÃ¶rev 2'de tartÄ±ÅŸÄ±lan bir istisna dÄ±ÅŸÄ±nda). 
            
            b. trackingReports state array iÃ§in, dizide Ã¶nceden var olan tÃ¼m nesneler korunmalÄ± ve array'in sonuna yeni bir nesne eklenmelidir. 
                    
             Ã–zellik   		 	          DeÄŸer 				  
		    	â•·----------------------â•·-------------------------------------------â•·
		      |  timeStamp           |  getTimeStamp fonksiyonunun return deÄŸeri |
		    	|----------------------|-------------------------------------------|
		    	|  employeeInput       |  textarea'daki geÃ§erli girdinin tÃ¼mÃ¼      |
		    	|----------------------|-------------------------------------------|
		    	|  infractionDetected  |   employeeInput "Evil Corp." stringini    |
          |                      |  iÃ§eriyorsa true - aksi takdirde, false   |	
		    	Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯
           
       2. EÄŸer kullanÄ±cÄ± "Evil Corp." metnini yazarsa ("title case" olarak) yazarsa, bu dize hem userInput state'inde hem de textarea'da otomatik olarak "Good Corp." ile deÄŸiÅŸtirilmelidir. 
       
    3. Metin alanÄ±na "Evil Corp. test" yazarak uygulamayÄ± test edin. Bu gÃ¶revleri doÄŸru bir ÅŸekilde tamamlarsanÄ±z, her harf yazdÄ±ÄŸÄ±nÄ±zda bir console.log mesajÄ± almalÄ±sÄ±nÄ±z ve mesajlar sampleOutput.md dosyasÄ±ndakiler gibi olmalÄ±dÄ±r.

       
       4. YalnÄ±zca aÅŸaÄŸÄ±daki kodu yazmanÄ±z gerekir. YukarÄ±daki veya projenin baÅŸka bir yerindeki kodlarÄ±n hiÃ§birinin deÄŸiÅŸtirilmesi gerekmiyor.
*/

  return (
    <div>
      <Header />
      <textarea
        placeholder="Raporunuzu buraya yazÄ±n..."
        value={userInput}
        onChange={handleInputChange}
      />
    </div>
  );
}
